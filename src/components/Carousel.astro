---
import "@splidejs/splide/css";
import { Splide, SplideSlide } from "astro-splide";
import FeaturedCard from "./base/FeaturedCard.astro";
import { type Project } from "../types.ts";
import type { Options, ResponsiveOptions } from "@splidejs/splide";

interface Props {
  projects: Project[];
  autoScrollSpeed?: number;
  className?: string;
}

const { projects, autoScrollSpeed = 3500, className = "" } = Astro.props;

const options: Options = {
  type: "loop",
  perMove: 1,
  autoplay: true,
  interval: autoScrollSpeed,
  pauseOnHover: true,
  keyboard: true,

  // --- DESKTOP SETTINGS (Default) ---
  fixedWidth: "24rem",
  gap: "1rem",
  pagination: true,
  arrows: true,
  padding: "1rem",

  // --- MOBILE BREAKPOINT ---
  // For screens 768px or narrower
  breakpoints: {
    768: {
      perPage: 1, // Show one slide
      fixedWidth: 0, // IMPORTANT: Reset fixedWidth to let perPage work
      arrows: false,
      padding: "1.5rem", // Give mobile view some breathing room on the sides
    },
  },
};
---

<h2
  class="font-[Schoolbell] text-2xl font-bold text-black dark:text-gray-200 sm:text-center md:text-left"
>
  Featured Projects
</h2>

<div class="max-w-xs sm:max-w-xl md:max-w-xl lg:max-w-[52rem] mx-auto p-2">
  <Splide class={`not-content h-auto p-3 ${className}`} options={options}>
    {
      projects.map((project) => (
        <SplideSlide>
          <div class="w-full max-w-xs mx-auto">
            <FeaturedCard
              title={project.title}
              description={project.description}
              company={project.company}
              location={project.location}
              dates={project.dates}
              image={"/images/projects/" + project.image + ".svg"}
              stack={project.stack}
              link={project.link}
              featuredPhoto={
                "/images/projects/" + project.title.toLowerCase() + "/feat.png"
              }
            />
          </div>
        </SplideSlide>
      ))
    }
  </Splide>
</div>

<style>
  :global(.splide__arrow) {
    @apply w-8 h-8 bg-black/50 hover:bg-black/70 rounded-full backdrop-blur-sm transition-all duration-200 border-0;
  }

  :global(.splide__arrow svg) {
    @apply w-4 h-4 fill-white;
  }

  :global(.splide__pagination) {
    @apply -bottom-6 p-0;
  }

  :global(.splide__pagination__page) {
    @apply w-2 h-2 bg-gray-300 hover:bg-gray-400 rounded-full mx-1 border-0 transition-colors duration-200 opacity-100;
  }

  :global(.splide__pagination__page.is-active) {
    @apply bg-yellow-600 scale-110;
  }

  :global(.dark .splide__pagination__page.is-active) {
    @apply bg-gray-600;
  }
</style>
